<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.1ecpdg61sripyg11cnu2u01rmbs6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.12ur30j16lh4r012h7jfx1y4danb'>
            <connection class='textscan' directory='C:/Users/mites/Downloads' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12ur30j16lh4r012h7jfx1y4danb' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12ur30j16lh4r012h7jfx1y4danb' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Cost Price' datatype='real' name='[Calculation_739997774957924352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]-[Profit]' />
      </column>
      <column caption='Dicount Amount' datatype='real' name='[Calculation_739997774987182081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_739997775033860098]*[Discount])' />
      </column>
      <column caption='Marked Price' datatype='real' name='[Calculation_739997775033860098]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Sales]*100)/(100-[Discount]*100)' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region &amp; State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Region &amp; State]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Central&quot;'>
            <value>(&quot;Central&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Central&quot;,&quot;Indiana&quot;)</value>
            <value>(&quot;Central&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Central&quot;,&quot;Kansas&quot;)</value>
            <value>(&quot;Central&quot;,&quot;Michigan&quot;)</value>
            <value>(&quot;Central&quot;,&quot;Minnesota&quot;)</value>
            <value>(&quot;Central&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Central&quot;,&quot;Nebraska&quot;)</value>
            <value>(&quot;Central&quot;,&quot;North Dakota&quot;)</value>
            <value>(&quot;Central&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Central&quot;,&quot;South Dakota&quot;)</value>
            <value>(&quot;Central&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Central&quot;,&quot;Wisconsin&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;East&quot;'>
            <value>(&quot;East&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East&quot;,&quot;Delaware&quot;)</value>
            <value>(&quot;East&quot;,&quot;District of Columbia&quot;)</value>
            <value>(&quot;East&quot;,&quot;Maine&quot;)</value>
            <value>(&quot;East&quot;,&quot;Maryland&quot;)</value>
            <value>(&quot;East&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;East&quot;,&quot;New Jersey&quot;)</value>
            <value>(&quot;East&quot;,&quot;New York&quot;)</value>
            <value>(&quot;East&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;East&quot;,&quot;Pennsylvania&quot;)</value>
            <value>(&quot;East&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;East&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East&quot;,&quot;West Virginia&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;South&quot;'>
            <value>(&quot;South&quot;,&quot;Alabama&quot;)</value>
            <value>(&quot;South&quot;,&quot;Arkansas&quot;)</value>
            <value>(&quot;South&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;South&quot;,&quot;Georgia&quot;)</value>
            <value>(&quot;South&quot;,&quot;Kentucky&quot;)</value>
            <value>(&quot;South&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;South&quot;,&quot;Mississippi&quot;)</value>
            <value>(&quot;South&quot;,&quot;North Carolina&quot;)</value>
            <value>(&quot;South&quot;,&quot;South Carolina&quot;)</value>
            <value>(&quot;South&quot;,&quot;Tennessee&quot;)</value>
            <value>(&quot;South&quot;,&quot;Virginia&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>(&quot;West&quot;,&quot;Arizona&quot;)</value>
            <value>(&quot;West&quot;,&quot;California&quot;)</value>
            <value>(&quot;West&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;West&quot;,&quot;Idaho&quot;)</value>
            <value>(&quot;West&quot;,&quot;Montana&quot;)</value>
            <value>(&quot;West&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;West&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;West&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;West&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;West&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;West&quot;,&quot;Wyoming&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore.csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Segment]' derivation='Count' name='[cnt:Segment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group auto-hidden='true' hidden='true' name='[Region &amp; State]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Category)' hidden='true' name='[Tooltip (Category)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Category,Sub-Category)' hidden='true' name='[Tooltip (Category,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Country,Region,State)' hidden='true' name='[Tooltip (Country,Region,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Country,State)' hidden='true' name='[Tooltip (Country,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Region &amp; State (group),Region)' hidden='true' name='[Tooltip (Region &amp; State (group),Region)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region &amp; State (group)]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Region,Segment)' hidden='true' name='[Tooltip (Region,Segment)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Segment,Ship Mode)' hidden='true' name='[Tooltip (Segment,Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment]' />
          <groupfilter function='level-members' level='[Ship Mode]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/mites/Desktop/TSF GRIP/Tableu/SampleSuperstore.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/16/2022 06:24:08 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='SampleSuperstore' increment-value='%null%' refresh-type='create' rows-inserted='9994' timestamp-start='2022-01-16 06:24:06.770' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>0</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>1</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>3</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>4</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>5</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>6</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>7</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>8</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>9</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3356</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>10</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>11</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>12</ordinal>
              <family>SampleSuperstore.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3776</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Region &amp; State (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[cnt:Segment:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[__tableau_internal_object_id__].[cnt:SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore.csv' id='SampleSuperstore.csv_1BF77BFF78124BCDA18F7608D9106A5F'>
            <properties context=''>
              <relation connection='textscan.12ur30j16lh4r012h7jfx1y4danb' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Catagory'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1ecpdg61sripyg11cnu2u01rmbs6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ecpdg61sripyg11cnu2u01rmbs6'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Sheet 4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Region,Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - SegmentCatagory]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Country,State)]</column>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</column>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Region,Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='text-format' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="CategorySubcategory" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Category:nk] / [federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names])</rows>
        <cols>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{6D5080F7-9803-4560-BA79-3386623AB1E9}' />
    </worksheet>
    <worksheet name='CategorySubcategory'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1ecpdg61sripyg11cnu2u01rmbs6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ecpdg61sripyg11cnu2u01rmbs6'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action - CategorySubcategory]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</column>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='text-format' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' value='false' />
            <format attr='text-orientation' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk]' value='-90' />
            <format attr='font-size' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk]' value='7' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sub-Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Table" maxwidth="500" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]</rows>
        <cols>([federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Category:nk] / ([federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk] / [federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{83344DB3-7B76-4A23-9A6A-7D11FF278A09}' />
    </worksheet>
    <worksheet name='InTotal'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1ecpdg61sripyg11cnu2u01rmbs6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ecpdg61sripyg11cnu2u01rmbs6'>
            <column caption='Cost Price' datatype='real' name='[Calculation_739997774957924352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[Profit]' />
            </column>
            <column caption='Dicount Amount' datatype='real' name='[Calculation_739997774987182081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_739997775033860098]*[Discount])' />
            </column>
            <column caption='Marked Price' datatype='real' name='[Calculation_739997775033860098]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Sales]*100)/(100-[Discount]*100)' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_739997774957924352]' derivation='Sum' name='[sum:Calculation_739997774957924352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_739997774987182081]' derivation='Sum' name='[sum:Calculation_739997774987182081:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_739997775033860098]' derivation='Sum' name='[sum:Calculation_739997775033860098:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997775033860098:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997774987182081:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997774957924352:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997775033860098:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997774987182081:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997774957924352:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Segment,Ship Mode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Sheet 8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Segment]' />
              <groupfilter function='level-members' level='[Ship Mode]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</column>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Segment,Ship Mode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]' value='bold' />
            <format attr='font-size' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]' value='10' />
            <format attr='text-align' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]' value='left' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' value='60' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' value='#e15759' />
            <format attr='font-weight' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' value='bold' />
            <format attr='font-size' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' value='12' />
            <format attr='wrap' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' value='on' />
            <format attr='text-align' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2B493F22-3506-481B-8277-1E7E412F7994}' />
    </worksheet>
    <worksheet name='Region'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1ecpdg61sripyg11cnu2u01rmbs6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ecpdg61sripyg11cnu2u01rmbs6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region &amp; State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Region &amp; State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>(&quot;Central&quot;,&quot;Illinois&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Indiana&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Iowa&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Kansas&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Michigan&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Minnesota&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Missouri&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Nebraska&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;North Dakota&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Oklahoma&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;South Dakota&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Texas&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Wisconsin&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>(&quot;East&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Delaware&quot;)</value>
                  <value>(&quot;East&quot;,&quot;District of Columbia&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Maine&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Maryland&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East&quot;,&quot;New Jersey&quot;)</value>
                  <value>(&quot;East&quot;,&quot;New York&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Ohio&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Pennsylvania&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East&quot;,&quot;West Virginia&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>(&quot;South&quot;,&quot;Alabama&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Arkansas&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Florida&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Georgia&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Kentucky&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Louisiana&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Mississippi&quot;)</value>
                  <value>(&quot;South&quot;,&quot;North Carolina&quot;)</value>
                  <value>(&quot;South&quot;,&quot;South Carolina&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Tennessee&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Virginia&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>(&quot;West&quot;,&quot;Arizona&quot;)</value>
                  <value>(&quot;West&quot;,&quot;California&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Colorado&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Idaho&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Montana&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Nevada&quot;)</value>
                  <value>(&quot;West&quot;,&quot;New Mexico&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Oregon&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Utah&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Washington&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Wyoming&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Longitude (generated)]' field-type='quantitative' max='-5693763.452906847' min='-14923630.300821353' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Latitude (generated)]' field-type='quantitative' max='7804512.7813844271' min='2940123.645360006' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Region &amp; State (group)]' />
              <text column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]' />
              <text column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]' />
              <lod column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Region:nk]' />
              <lod column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]' />
              <lod column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]' />
              <geometry column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Region:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Profit:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'><![CDATA[Sheet name="Subcatecogy" maxwidth="300" maxheight="300" filter="<All Fields>"]]></run>
                <run fontcolor='#787878'>&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>Sales : &lt;</run>
                <run>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]</run>
                <run>&gt;&#10;Profit : &lt;</run>
                <run>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='6' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Latitude (generated)]</rows>
        <cols>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{64B75A6F-EF4B-4A10-9713-0B36396ED53F}' />
    </worksheet>
    <worksheet name='Segment'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1ecpdg61sripyg11cnu2u01rmbs6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ecpdg61sripyg11cnu2u01rmbs6'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Sheet 4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Country,State)]</column>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='text-format' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk] / [federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names])</rows>
        <cols>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{4D7446EC-5B06-455A-95EA-56B6A7383B50}' />
    </worksheet>
    <worksheet name='SegmentRegion'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1ecpdg61sripyg11cnu2u01rmbs6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ecpdg61sripyg11cnu2u01rmbs6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]' value='10' />
            <format attr='height' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Region:nk]' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' value='false' />
            <format attr='text-orientation' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Region:nk]' value='-90' />
            <format attr='font-size' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Region:nk]' value='7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Region:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Segment:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>&lt;</run>
                <run bold='true'><![CDATA[Sheet name="Catagory" maxwidth="300" maxheight="300" filter="<All Fields>"]]></run>
                <run bold='true'>&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]</rows>
        <cols>([federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk] / ([federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Region:nk] / [federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{D68F015E-52EF-4333-8B23-3BEE185AC6FF}' />
    </worksheet>
    <worksheet name='ShipModeSegment'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1ecpdg61sripyg11cnu2u01rmbs6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ecpdg61sripyg11cnu2u01rmbs6'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Consumer&quot;</bucket>
              <bucket>&quot;Corporate&quot;</bucket>
              <bucket>&quot;Home Office&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Quantity:qk]' value='60' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]' value='#d4d4d4' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]' value='0' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]' value='false' />
            <format attr='text-orientation' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]' value='-90' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='7' />
            <format attr='col-width' field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]' value='70' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Segment:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Ship Mode:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Ship Mode:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Quantity:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Quantity:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Subcatecogy" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Quantity:qk]</rows>
        <cols>([federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Ship Mode:nk] / [federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk])</cols>
      </table>
      <simple-id uuid='{C871E132-9AF1-4D79-99CF-2F20BF876EA1}' />
    </worksheet>
    <worksheet name='Subcatecogy'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1ecpdg61sripyg11cnu2u01rmbs6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ecpdg61sripyg11cnu2u01rmbs6'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region &amp; State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Region &amp; State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>(&quot;Central&quot;,&quot;Illinois&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Indiana&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Iowa&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Kansas&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Michigan&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Minnesota&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Missouri&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Nebraska&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;North Dakota&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Oklahoma&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;South Dakota&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Texas&quot;)</value>
                  <value>(&quot;Central&quot;,&quot;Wisconsin&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>(&quot;East&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Delaware&quot;)</value>
                  <value>(&quot;East&quot;,&quot;District of Columbia&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Maine&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Maryland&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East&quot;,&quot;New Jersey&quot;)</value>
                  <value>(&quot;East&quot;,&quot;New York&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Ohio&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Pennsylvania&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East&quot;,&quot;West Virginia&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>(&quot;South&quot;,&quot;Alabama&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Arkansas&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Florida&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Georgia&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Kentucky&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Louisiana&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Mississippi&quot;)</value>
                  <value>(&quot;South&quot;,&quot;North Carolina&quot;)</value>
                  <value>(&quot;South&quot;,&quot;South Carolina&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Tennessee&quot;)</value>
                  <value>(&quot;South&quot;,&quot;Virginia&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>(&quot;West&quot;,&quot;Arizona&quot;)</value>
                  <value>(&quot;West&quot;,&quot;California&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Colorado&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Idaho&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Montana&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Nevada&quot;)</value>
                  <value>(&quot;West&quot;,&quot;New Mexico&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Oregon&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Utah&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Washington&quot;)</value>
                  <value>(&quot;West&quot;,&quot;Wyoming&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Region &amp; State (group),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - SubcatecogyRegion]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region &amp; State (group)]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Segment,Ship Mode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Subcatecogy]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Segment]' />
              <groupfilter function='level-members' level='[Ship Mode]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Quantity:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Region &amp; State (group),Region)]</column>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Segment,Ship Mode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='5' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk]</rows>
        <cols>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Quantity:qk]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{022032F2-98C8-431A-866F-88FF81168438}' />
    </worksheet>
    <worksheet name='Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1ecpdg61sripyg11cnu2u01rmbs6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ecpdg61sripyg11cnu2u01rmbs6'>
            <column caption='Cost Price' datatype='real' name='[Calculation_739997774957924352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[Profit]' />
            </column>
            <column caption='Dicount Amount' datatype='real' name='[Calculation_739997774987182081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_739997775033860098]*[Discount])' />
            </column>
            <column caption='Marked Price' datatype='real' name='[Calculation_739997775033860098]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Sales]*100)/(100-[Discount]*100)' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_739997774957924352]' derivation='Sum' name='[sum:Calculation_739997774957924352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_739997774987182081]' derivation='Sum' name='[sum:Calculation_739997774987182081:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_739997775033860098]' derivation='Sum' name='[sum:Calculation_739997775033860098:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997775033860098:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997774987182081:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997774957924352:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997775033860098:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997774987182081:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Calculation_739997774957924352:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ecpdg61sripyg11cnu2u01rmbs6].[sum:Profit:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Table]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</column>
            <column>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Tooltip (Category,Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk] / [federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Region:nk])</rows>
        <cols>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{FFC7C1FD-58D3-4CAC-AB10-3B5DF7B67976}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Semibold' fontsize='24'>SuperStore</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#000000' />
          <format attr='color' value='#f9a655' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97260' id='5' param='vert' type-v2='layout-flow' w='98614' x='693' y='1370'>
            <zone h='97260' id='6' type-v2='layout-basic' w='98614' x='693' y='1370'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='3' />
                <format attr='background-color' value='#1b1b1b' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='34247' id='8' name='Region' show-title='false' w='32468' x='1039' y='9589'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone h='16952' id='9' name='Region' pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Region &amp; State (group)]' type-v2='color' w='7792' x='24762' y='22089' />
        <zone h='34247' id='10' name='ShipModeSegment' show-title='false' w='32468' x='33853' y='9589'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone h='6678' id='11' leg-item-layout='horz' name='ShipModeSegment' pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]' type-v2='color' w='25887' x='39481' y='20890' />
        <zone h='35445' id='12' name='Catagory' show-title='false' w='32468' x='1039' y='44521'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone h='11301' id='13' name='Catagory' pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' type-v2='color' w='6494' x='73074' y='69349' />
        <zone h='34247' id='14' name='SegmentRegion' show-title='false' w='32468' x='66580' y='9589'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone h='52740' id='16' name='CategorySubcategory' show-title='false' w='64935' x='33939' y='44521'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone h='16438' id='17' name='InTotal' show-title='false' w='32468' x='1039' y='80479'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone h='9932' id='18' name='CategorySubcategory' pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' type-v2='color' w='12121' x='74632' y='66610' />
        <zone h='6849' id='29' type-v2='text' w='14459' x='1039' y='2055'>
          <formatted-text>
            <run bold='true' fontcolor='#f9a655' fontname='Tableau Semibold' fontsize='22'>Super Store</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontname='Tableau Semibold' fontsize='24'>SuperStore</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97260' id='32' param='vert' type-v2='layout-flow' w='98614' x='693' y='1370'>
                <zone h='6849' id='29' type-v2='text' w='14459' x='1039' y='2055'>
                  <formatted-text>
                    <run bold='true' fontcolor='#f9a655' fontname='Tableau Semibold' fontsize='22'>Super Store</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='34247' id='8' is-fixed='true' name='Region' show-title='false' w='32468' x='1039' y='9589'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16952' id='9' name='Region' pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Region &amp; State (group)]' type-v2='color' w='7792' x='24762' y='22089'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='34247' id='10' is-fixed='true' name='ShipModeSegment' show-title='false' w='32468' x='33853' y='9589'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6678' id='11' leg-item-layout='horz' name='ShipModeSegment' pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]' type-v2='color' w='25887' x='39481' y='20890'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='34247' id='14' is-fixed='true' name='SegmentRegion' show-title='false' w='32468' x='66580' y='9589'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35445' id='12' is-fixed='true' name='Catagory' show-title='false' w='32468' x='1039' y='44521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11301' id='13' name='Catagory' pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' type-v2='color' w='6494' x='73074' y='69349'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52740' id='16' is-fixed='true' name='CategorySubcategory' show-title='false' w='64935' x='33939' y='44521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9932' id='18' name='CategorySubcategory' pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' type-v2='color' w='12121' x='74632' y='66610'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='127' h='16438' id='17' is-fixed='true' name='InTotal' show-title='false' w='32468' x='1039' y='80479'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E3EAEED1-A452-4B3B-9684-F38E6EBBC487}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='ShipModeSegment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5EB2B58-F8B3-4FCB-96F6-7D4972D52E4A}' />
    </window>
    <window class='worksheet' name='Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Region &amp; State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Region &amp; State (group)]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{74C0F2A2-556A-412E-9EE0-D94F03B8017F}' />
    </window>
    <window class='worksheet' name='Catagory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Category:nk]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{949FAB69-54C3-4A96-B426-77BD832B1E3B}' />
    </window>
    <window class='worksheet' name='Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Category:nk]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{504ADD52-00B9-485E-8896-10186C187878}' />
    </window>
    <window class='worksheet' name='SegmentRegion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Region:nk]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B2C930D3-9084-46D2-BA97-97527548831E}' />
    </window>
    <window class='worksheet' name='CategorySubcategory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Category:nk]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C7DF2AD-554B-4AC2-AD6B-0C7D00F11444}' />
    </window>
    <window class='worksheet' name='Subcatecogy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Region:nk]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{449725A0-E892-400F-84D6-CAB27735E7A6}' />
    </window>
    <window class='worksheet' name='InTotal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1CE1A0D5-177C-4A0B-992A-860D139D2773}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Catagory'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='CategorySubcategory'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='InTotal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Region'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[Region &amp; State (group)]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='SegmentRegion'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ecpdg61sripyg11cnu2u01rmbs6].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='ShipModeSegment'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Segment:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{F0C9473B-6640-44E8-9739-E67AEBDDBE5C}' />
    </window>
    <window class='worksheet' name='Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Region:nk]</field>
            <field>[federated.1ecpdg61sripyg11cnu2u01rmbs6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{434429A6-55A9-49D7-83F0-C11A5FC84FE7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Catagory' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CategorySubcategory' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      +f/Dk9MlNI2raQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='84' name='InTotal' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Region' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Segment' width='192'>
      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
      xZwCBSRUcgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SegmentRegion' width='192'>
      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
      5oQqntcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ShipModeSegment' width='192'>
      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
      tRJiicxzDKDg9RUz1nOV1k9auXC5E7k7VawmC7gQpqA6bJSU+iku8soxgFhVFhAAGw1b1zN4
      q4fB4QBG/uskxJJZQACSdPUN4HXVUuIyZfioWFUW8P/sZNO2Fordk0wlkHFAYlVZwFggg1Ro
      ipjpxON23ntR02RsoJPeiTi7djcSj+gUOtPMGE7KiwtyU2MhcmhBo0H3Hn6O3//OUVzZ2D33
      ANnZcQbCGvv37sRlSxGYCNHdexuvR4ZQi5VpQfcDXDj1Hv2TETxlG9DusWRiJsFMaJAPPhyl
      sWUz/TcuUb6tGa9DQ9d1DMNA13XS6XTONmC1k/bKr3sGwDRNJvq7GAhMo3r8bKkqZjIyS6Xv
      q7sz3pIiSkuqKfOYxGIxNuzYh92cYCKcoLzYjaZpaJqGw+HIy8asRtJe+XXPLpChRzj14TX2
      P/4U+5tqefvXJ1Hsd/9jqJ4yttT4yNoLqa9eT906Pxu3NuC8125DiGV0zz2AgkIqncLhcqNk
      FHxrayn13PvbyLemGt+aO6/tn+4oimX8hFih7hkA1VbEN498g4/eewechTz/4rMyFkisKvMc
      BCuU1TZwtLZhaWojxBKTC7vC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC
      0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0hYwK4QQD7ZULMzoRIiSiip8XicKJpHgBJGUIgEQ
      q9/owC06b08wcf46P/j9b0JihFePf4zPoUsXSKx+VfU1TPYNsKam/s4bjkIKjBnGI+ncB8A0
      DaYng+hkSSQy6JkU8ZQ8WUwsnywFfO/Pvs/0UDdgkgkNoaz7Bt96dHPuAxAd7+PD020kiNLf
      P8lA902iSXmshlg+t2+08rP//QvKajfRef59hqmmINzOm58MoJimmbMJn41snPaOQZzJGLX7
      NvLBL09Tub2ZPdvWYxh3pkYMBoP4/f5cFbnqTU1NSXvl0PDQENW1tXMPesnpQXBoZJDR0SFm
      JsZR6sqob2whk5gknqnD69BkasSvQdortzZs/OJDHnMaAP+6Ro6sa2BicIjiyjKmzQwlXg/B
      cBRPebE8XkksmXfb+jh2pnPe5fJwGlShYl0dAGvX3nmnpij3pQhxL9F4mqHAzLzLyWlQYWkS
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Subcatecogy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table' width='192'>
      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
      LPkZZ7tFAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
